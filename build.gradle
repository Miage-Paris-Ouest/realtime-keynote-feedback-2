group 'upn.miage'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
defaultTasks 'clean', 'test', 'jacocoTestReport'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

dependencies {
    testCompile 'org.testng:testng:6.9.6'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.assertj:assertj-core:3.9.0'
    compile 'com.pholser:junit-quickcheck-core:0.8'
    compile 'com.pholser:junit-quickcheck-generators:0.8'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task testTestNG(type: Test) {
    useTestNG() {
        options.suites 'src/test/resources/testng.xml'
    }
}

test {
    dependsOn 'testTestNG'
    ignoreFailures = true
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPaths", ["build/jacoco/testTestNG.exec", "build/jacoco/test.exec"]
        property "sonar.junit.reportPaths", ["build/test-results/testTestNG", "build/test-results/test"]
        property "sonar.tests", "src/test/java"
        property "sonar.coverage.exclusions", ["src/main/java/impl/ExpressionBuilder.java", "src/main/java/main/Main.java" ]
    }
}

// Makes sonar runner not dependent on tests (when the test
// Requires that you run the test task before the sonarqube task
project.tasks["sonarqube"].dependsOn = []
